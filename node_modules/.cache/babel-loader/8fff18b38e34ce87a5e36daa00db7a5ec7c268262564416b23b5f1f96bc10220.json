{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/threeJsPortFolio/src/components/Laptop.js\",\n  _s = $RefreshSig$();\nimport * as THREE from 'three';\nimport React, { Suspense, useRef } from 'react';\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport { Html, Environment, useGLTF, ContactShadows, OrbitControls } from '@react-three/drei';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Laptop(props) {\n  _s();\n  const group = useRef();\n  // Load model\n  const {\n    nodes,\n    materials\n  } = useGLTF('/mac-draco.glb');\n  // Make it float\n  useFrame(state => {\n    const t = state.clock.getElapsedTime();\n    group.current.rotation.x = THREE.MathUtils.lerp(group.current.rotation.x, Math.cos(t / 2) / 20 + 0.25, 0.1);\n    group.current.rotation.y = THREE.MathUtils.lerp(group.current.rotation.y, Math.sin(t / 4) / 20, 0.1);\n    group.current.rotation.z = THREE.MathUtils.lerp(group.current.rotation.z, Math.sin(t / 8) / 20, 0.1);\n    group.current.position.y = THREE.MathUtils.lerp(group.current.position.y, (-2 + Math.sin(t / 2)) / 2, 0.1);\n  });\n  // The jsx graph was auto-generated by: https://github.com/pmndrs/gltfjsx\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    ref: group,\n    ...props,\n    dispose: null,\n    children: /*#__PURE__*/_jsxDEV(\"group\", {\n      \"rotation-x\": -0.425,\n      position: [0, -0.04, 0.41],\n      children: /*#__PURE__*/_jsxDEV(\"group\", {\n        position: [0, 2.96, -0.13],\n        rotation: [Math.PI / 2, 0, 0],\n        children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n          material: materials.aluminium,\n          geometry: nodes['Cube008'].geometry\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n          material: materials['matte.001'],\n          geometry: nodes['Cube008_1'].geometry\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n          geometry: nodes['Cube008_2'].geometry\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(Laptop, \"efmrIhMlA9Blnx8sWk3HeAdfRv8=\", false, function () {\n  return [useGLTF, useFrame];\n});\n_c = Laptop;\nexport default Laptop;\nvar _c;\n$RefreshReg$(_c, \"Laptop\");","map":{"version":3,"names":["THREE","React","Suspense","useRef","Canvas","useFrame","Html","Environment","useGLTF","ContactShadows","OrbitControls","jsxDEV","_jsxDEV","Laptop","props","_s","group","nodes","materials","state","t","clock","getElapsedTime","current","rotation","x","MathUtils","lerp","Math","cos","y","sin","z","position","ref","dispose","children","PI","material","aluminium","geometry","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/admin/Documents/threeJsPortFolio/src/components/Laptop.js"],"sourcesContent":["import * as THREE from 'three'\nimport React, { Suspense, useRef } from 'react'\nimport { Canvas, useFrame } from '@react-three/fiber'\nimport { Html, Environment, useGLTF, ContactShadows, OrbitControls } from '@react-three/drei'\n\nfunction Laptop(props) {\n  const group = useRef()\n  // Load model\n  const { nodes, materials } = useGLTF('/mac-draco.glb')\n  // Make it float\n  useFrame((state) => {\n    const t = state.clock.getElapsedTime()\n    group.current.rotation.x = THREE.MathUtils.lerp(group.current.rotation.x, Math.cos(t / 2) / 20 + 0.25, 0.1)\n    group.current.rotation.y = THREE.MathUtils.lerp(group.current.rotation.y, Math.sin(t / 4) / 20, 0.1)\n    group.current.rotation.z = THREE.MathUtils.lerp(group.current.rotation.z, Math.sin(t / 8) / 20, 0.1)\n    group.current.position.y = THREE.MathUtils.lerp(group.current.position.y, (-2 + Math.sin(t / 2)) / 2, 0.1)\n  })\n  // The jsx graph was auto-generated by: https://github.com/pmndrs/gltfjsx\n  return (\n    <group ref={group} {...props} dispose={null}>\n      <group rotation-x={-0.425} position={[0, -0.04, 0.41]}>\n        <group position={[0, 2.96, -0.13]} rotation={[Math.PI / 2, 0, 0]}>\n          <mesh material={materials.aluminium} geometry={nodes['Cube008'].geometry} />\n          <mesh material={materials['matte.001']} geometry={nodes['Cube008_1'].geometry} />\n          <mesh geometry={nodes['Cube008_2'].geometry}>\n            {/* Drei's HTML component can \"hide behind\" canvas geometry */}\n            {/* <Html className=\"content\" rotation-x={-Math.PI / 2} position={[0, 0.05, -0.09]} transform occlude>\n              <div className=\"wrapper\" onPointerDown={(e) => e.stopPropagation()}>\n                <HeroPage />\n              </div>\n            </Html> */}\n          </mesh>\n        </group>\n      </group>\n      {/* <mesh material={materials.keys} geometry={nodes.keyboard.geometry} position={[1.79, 0, 3.45]} /> */}\n      {/* <group position={[0, -0.1, 3.39]}>\n        <mesh material={materials.aluminium} geometry={nodes['Cube002'].geometry} />\n        <mesh material={materials.trackpad} geometry={nodes['Cube002_1'].geometry} />\n      </group> */}\n      {/* <mesh material={materials.touchbar} geometry={nodes.touchbar.geometry} position={[0, -0.03, 1.2]} /> */}\n    </group>\n  )\n}\n\nexport default Laptop;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}